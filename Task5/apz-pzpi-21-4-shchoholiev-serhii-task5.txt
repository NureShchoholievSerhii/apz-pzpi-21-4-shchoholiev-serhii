1 МЕТА РОБОТИ

Розробити мобільний програмний  застосунок для будь-якої поширеної на сьогодні мобільної платформи. Мобільний застосунок повинен бути частиною системи і повинен взаємодіяти  з нею. Для реалізації програмного застосунку можна використовувати технології для реалізації програмного забезпечення для мобільних платформ, вказані лектором. Створити UML діаграми прецедентів, компонентів та діяльності за темою програмна система для моніторингу продуктів у холодильниках та управління рецептами.
 
2 КОНЦЕПТУАЛЬНЕ МОДЕЛЮВАННЯ ПРЕДМЕТНОЇ ОБЛАСТІ

2.1 Розробка UML діаграми прецедентів

Для опису поведінки системи використовується UML діаграма прецедентів. Діаграму для користувача з роллю «Користувач» наведено на рисунку 1. Вона описує базовий функціонал доступний усім користувачам.
Користувач з роллю «Користувач» є основним актором у системі. Всі подальші ролі наслідують можливості від користувача і розширюють нього. Він має можливості реєстрації та подальшого входу у систему, створювати групу, що додає користувачу роль «Власник» (див. рис. 2). Крім того користувач може переглядати рецепти та продукти, шукати, оновлювати та створювати рецепти з можливістю вибору категорії рецепту та завантаження фото. «Користувач» також взаємодіє з актором пристрою для розпізнавання продуктів. 
Як було зазначено, якщо користувач створює групу, то він автоматично отримає роль «Власник». Це додає можливості: перегляду та активація пристроїв і управління групою. Крім цього існує актор «Адміністратор», що має можливість управління користувачами та додавання пристроїв, бо кожен пристрій має бути додано у систему під час його первинного налаштування (див. рис. 2). 

2.2 Розробка UML діаграми компонентів

Діаграма компонентів відображає, як система розділена на компоненти і як ці компоненти взаємодіють між собою. На рисунку 3 зображена діаграма компонентів клієнтської частини, а саме сторінок або компонентів SwiftUI і їх взаємодія між собою.
Навігаційна панель є центром додатку (див. рис. 3), з її допомогою користувач може отримати доступ до більшості сторінок, що включають профіль користувача, створення групи або пристрою, перегляд пристроїв, продуктів, рецептів та користувачів. З сторінки профілю користувач має доступ до компонентів реєстрації та входу у систему. Крім того, користувач може переходити з реєстрації на вхід у систему і назад. При перегляді рецептів користувач може перейти на деталі рецепту. Під час перегляду користувачів адміністратор може переглянути деталі одного з користувачів.

2.3	Розробка UML діаграми діяльності

Діаграма діяльності відображає послідовність кроків та контрольну структуру, які описують, як діяльності виконуються для досягнення певної мети. На рисунку 4 наведено діаграму діяльності для початкового налаштування системи.
Спочатку користувачу треба зареєструватися, після чого початкове налаштування відрізняється для користувача, що буде власником групи та учасником групи. Першому треба створити групи, після чого він може додати учасників до групи або активувати пристрої (див. рис. 4), що були придбані заздалегідь. Учаснику ж треба надати свою поштову скриньку або телефон власнику групи. Далі користувачі мають додати продукти та рецепти. Після цього цифрова частина системи готова для використання.

2.4	Розробка UML діаграми станів

Діаграма станів зображує різні стани об'єкта в рамках життєвого циклу системи. Вона використовується для ілюстрації, як об'єкт відповідає на різні події, змінюючи свої стани. На рисунку 5 зображено діаграму станів ролей користувача у системі, а саме те, за допомогою яких дій користувач змінює ролі.
Після реєстрації усі користувачі отримують роль «Користувач» (див. рис. 5), що має базовий функціонал. Для того, щоб отримати роль розширений функціонал користувач має створити групу і автоматично отримати роль «Власник». Єдині користувачі, що можуть виконувати адміністрування системи, це користувачі з роллю «Адміністратор». Її можна отримати тільки коли інший адміністратор надає користувачу цю роль через панель адміністрування.
 
3 ІНЖЕНЕРНІ РІШЕННЯ

3.1 Технічні рішення

Для створення мобільного додатку системи моніторингу продуктів використовується Swift і SwiftUI, з iOS 17 як цільовою платформою, що забезпечує надзвичайну гнучкість та інноваційність у дизайні інтерфейсу. 
Основною причиною вибору SwiftUI замість традиційних Storyboards є його декларативний підхід до розробки UI. SwiftUI дозволяє описувати інтерфейси у вигляді коду, що значно спрощує процеси розробки та тестування. Такий підхід надає більше контролю над кожним елементом інтерфейсу, дозволяючи точно налаштовувати поведінку та зовнішній вигляд за допомогою прямих змін у коді.
Використання SwiftUI також полегшує масштабування та адаптацію додатку під різні розміри екранів та пристроїв Apple. Це особливо важливо для мобільних додатків, які повинні бути ефективними та привабливими на всіх пристроях, від iPhone до iPad. Крім того, SwiftUI інтегрується безпосередньо з функціями iOS, такими як анімації, жести та віджети, забезпечуючи плавну та природну взаємодію з користувачем.
Для забезпечення безпеки та конфіденційності даних у розумній системі інвентаризації, особливу увагу було приділено захисту токенів аутентифікації. В цьому контексті використовується Keystore, система управління ключами, яка дозволяє безпечно зберігати будь які типи конфіденційної інформації, такі як токени аутентифікації. Keystore ізолює та захищає ці чутливі дані від несанкціонованого доступу, навіть якщо операційна система або інші додатки були скомпрометовані.
Вибір iOS 17 як цільової платформи дозволяє використовувати останні нововведення та оптимізації системи, зокрема у сфері асинхронного програмування, що забезпечує високу продуктивність та реактивність додатку. 

3.2 Розробка користувацького інтерфейсу 

При першому відкритті додатку, користувача зустрічає сторінка реєстрації (див. рис. 6). Вона має форму для введення даних та перевірку формату поштової скриньки та телефону, що відображає користувачу детальну помилку, якщо реєстрація не була успішною (див. дот. А).
Після реєстрації користувача зустрічає сторінка створення групи, що зображена на рисунку 7. Для створення групи користувачу треба ввести ім’я та натиснути кнопку, після чого його буде перенаправлено на сторінку групи.
Сторінка групи містить ім’я та опис групи, а також список усіх користувачів. Користувач з роллю «Власник» має можливість додавати  інших користувачів до групи. Власнику треба лише ввести номер телефону або поштову скриньку користувача. Крім цього власник може видаляти користувачів з групи за натисканням на кнопку видалення у правій частині картки або покинути групу самостійно.
Після створення групи, користувач має активувати пристрої, це відбувається на сторінці пристроїв (див. рис. 9). Для активування пристрою користувачу треба ввести унікальний ідентифікатор пристрою. 
Далі користувач може переглядати, шукати продукти (див. рис. 10) та оновлювати їх кількість (див. рис. 11).
Після оновлення кількості продуктів користувач може перейти до перегляду (див. рис. 12) та пошуку рецептів (див. рис. 13).
Щоб переглянути деталі рецепту, користувач має натиснути на кнопку з іконкою інформації. Після чого, його буде перенаправлено до екрану деталей рецепту (див. дот. Б) (див. рис. 14). Де користувач може переглянути фото рецепту, інгредієнти, категорії, інструкцію приготування та саме приготувати рецепт. При натисканні на кнопку приготування рецепту, бізнес логіка на серверній частині перевіряє чи достатньо продуктів у групі і якщо достатньо то вони віднімаються з складу, в зворотному випадку користувач отримає помилку, з описом яких продуктів не вистачає (див. рис. 15). 
Якщо користувачу треба переглянути його персональні данні, змінити аккаунт або просто вийти з системи, то для цього існує сторінка профілю користувача (див. рис. 16).

3.3 Розробка інтерфейсу адміністрування

Інтерфейс адміністратора відрізняється лише розширеним функціоналом.  На рисунку 17, у навігаційній панелі, можна побачити додаткові розділи, а саме «Users» та «Create Device». Для зміни відображення розділів в навігаційній панелі перевіряються ролі користувача, що отримуються з JWT  і на базі них додаються розділи (див. дот. В).
Для оновлення даних користувача і найважливіше, його ролей, адміністратор має перейти на сторінку деталей користувача, що зображена на рисунку 18. Ця сторінка відображає ім’я, електронну пошту, телефон і ролі користувача, кожні з цих даних можуть бути оновлені. 
Найважливішою сторінкою інтерфейсу адміністрування є створення пристрою (див. рис 19).
Після створення пристрою, адміністратору буде надано унікальний ідентифікатор пристрою (див. рис. 20), що має бути завантажені на пристрій під час його налаштування. Для зручного копіювання даних напроти кожного значення існує кнопка копіювання, що додаю данні у буфер обміну.

3.4 Локалізація

Додаток підтримує локалізацію для англійської та української мови. Для локалізації використовуються стандартні утиліти Swift. Мова додатку завжди встановлюється на ту ж саму, що і мова мобільного пристрою. Всі переклади зберігаються у вигляді ключ-значення у JSON-файлах. Це забезпечує гнучкість у роботі з текстами та спрощує процес локалізації, роблячи додаток доступнішим для міжнародної аудиторії та поліпшуючи його користувацький досвід. Приклад локалізації наведено на рисунку 21, де мову замінено з англійської на українську (див. дот. Г). 

3.5 Темна тема

Темна тема була додана до iOS у версії 13, яка була випущена у вересні 2019 року. Ця функція, широко запитувана користувачами, дозволяє змінити інтерфейс операційної системи та додатків на більш темні кольори, що знижує навантаження на очі у темний час доби та може економити заряд батареї на пристроях з OLED-дисплеями. Підтримку темної теми було додано у систему (див. рис. 22) аби відповідати сучасним трендам та потребам користувачів, покращуючи загальний досвід використання та забезпечуючи додатковий комфорт для користувачів, які вважають за краще темніші інтерфейси, особливо у вечірні та нічні години. 
 
4 ВИСНОВКИ

Під час виконання лабораторної роботи було розроблено мобільний програмний  застосунок для мобільної платформи iOS. Створено UML діаграми прецедентів, компонентів та діяльності за темою програмна система для моніторингу продуктів у холодильниках та управління рецептами. 